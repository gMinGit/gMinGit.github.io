<?xml version="1.0" encoding="utf-8"?>

<feed xmlns="http://www.w3.org/2005/Atom" >
  <generator uri="https://jekyllrb.com/" version="3.7.4">Jekyll</generator>
  <link href="https://gmingit.github.io/author/gMinGit/feed.xml" rel="self" type="application/atom+xml" />
  <link href="https://gmingit.github.io/" rel="alternate" type="text/html" />
  <updated>2021-03-04T19:03:42+09:00</updated>
  <id>https://gmingit.github.io/author/gMinGit/feed.xml</id>

  
  
  

  
    <title type="html">MinGit IT Training | </title>
  

  
    <subtitle>MinGit IT 학습 블로그</subtitle>
  

  

  
    
      
    
  

  
  

  
    <entry>
      <title type="html">(2) Inflation</title>
      <link href="https://gmingit.github.io/Inflation2" rel="alternate" type="text/html" title="(2) Inflation" />
      <published>2021-03-04T03:51:00+09:00</published>
      <updated>2021-03-04T03:51:00+09:00</updated>
      <id>https://gmingit.github.io/Inflation2</id>
      <content type="html" xml:base="https://gmingit.github.io/Inflation2">&lt;ul class=&quot;table-of-contents-list&quot;&gt;
    &lt;li&gt;&lt;a href=&quot;./Inflation&quot;&gt;(1) Inflation &lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./Inflation2&quot;&gt;(2) Inflation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;전 시간에 이어서 인플레이션 과정을 알아보도록 하겠습니다.&lt;/p&gt;

&lt;p&gt;setContentView 메서드는 전체 화면에 대한 인플레이션만 가능하기 때문에&lt;/p&gt;

&lt;p&gt;부분적인 인플레이션은 불가능합니다.&lt;/p&gt;

&lt;p&gt;따라서 부분 화면을 객체화 하기 위해서는 인플레이터를 사용해야 합니다. 안드로이드는 이를 위해 시스템 서비스로&lt;/p&gt;

&lt;p&gt;LayoutInflater라는 클래스를 제공합니다. 그런데 LayoutInflater 클래스는 시스템 서비스로 제공하는 클래스이기 때문에&lt;/p&gt;

&lt;p&gt;getSystemService() 메서드를 사용하여 객체를 참조한 후 사용해야 합니다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;getSystemService(Context.LAYOUT_INFLATER_SERVICE)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;정리해보면 메인 레이아웃이 setContentView 메서드를 통해 객체화하여 화면에 나타나고 부분 화면은 LayoutInflater 객체를 사용해&lt;/p&gt;

&lt;p&gt;뷰그룹 객체로 인플레이션 한 후 메인화면에 추가해야 한다.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;MenuActivity&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;AppCompatActivity&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;LinearLayout&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;container&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;onCreate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Bundle&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;savedInstanceState&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;onCreate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;savedInstanceState&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;setContentView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;R&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;layout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;activity_menu&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;container&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;findViewById&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;R&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;container&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;LayoutInflater&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;inflater&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LayoutInflater&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getSystemService&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Context&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;LAYOUT_INFLATER_SERVICE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;inflater&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;inflate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;R&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;layout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;sub1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;container&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;위의 예제 코드를 보게 되면 setContentView 메서드를 통해서 메인 레이아웃 activity_menu을 인플레이션 한다.&lt;/p&gt;

&lt;p&gt;여기서 container는 메인 레이아웃에서 부분 레이아웃이 들어갈 레이아웃 id이다.&lt;/p&gt;

&lt;p&gt;getSystemService 메서드를 통해서 LayoutInflater 객체를 참조하고&lt;/p&gt;

&lt;p&gt;inflate(R.layout.sub1, container, true) 메서드를 통해서 sub1.xml 레이아웃 파일을 인플레이션하여 메인레이아웃&lt;/p&gt;

&lt;p&gt;container 자리로 추가한다.&lt;/p&gt;

&lt;p&gt;여기까지 인플레이션에 대해서 알아 보았다.&lt;/p&gt;

&lt;p&gt;인플레이션은 안드로이드 앱이 실제로 어떻게 동작되는 것인지 이해하기 위해서 꼭 알아두어야 하는 개념인 것 같다.&lt;/p&gt;

&lt;p&gt;모든 코드 및 내용의 출처는 Do it 안드로이드 앱 프로그래밍 책을 참조하였습니다.&lt;/p&gt;</content>

      
      
      
      
      

      <author>
          <name>gMinGit</name>
        
        
      </author>

      

      
        <category term="Android" />
      

      
        <summary type="html">(1) Inflation (2) Inflation</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">(1) Inflation</title>
      <link href="https://gmingit.github.io/Inflation" rel="alternate" type="text/html" title="(1) Inflation" />
      <published>2021-03-04T03:50:00+09:00</published>
      <updated>2021-03-04T03:50:00+09:00</updated>
      <id>https://gmingit.github.io/Inflation</id>
      <content type="html" xml:base="https://gmingit.github.io/Inflation">&lt;ul class=&quot;table-of-contents-list&quot;&gt;
    &lt;li&gt;&lt;a href=&quot;./Inflation&quot;&gt;(1) Inflation &lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./Inflation2&quot;&gt;(2) Inflation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;안드로이드의 앱은 어떻게 만들어지는 걸까?&lt;/p&gt;

&lt;p&gt;안드로이드 앱을 만들기 위해서는 화면을 구성하고 배치하기 위한 XML 레이아웃 파일과&lt;/p&gt;

&lt;p&gt;화면의 기능을 담당하는 소스코드 파일이 필요하다.&lt;/p&gt;

&lt;p&gt;그렇다면 어떻게 XML 레이아웃 파일과 소스코드 파일이 연결되는 걸까?&lt;/p&gt;

&lt;p&gt;우리가 간단하게 안드로이드 스튜디오에서 예제 프로젝트를 실행하게 되면&lt;/p&gt;
&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;MainActivity&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;AppCompatActivity&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;onCreate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Bundle&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;savedInstanceState&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;onCreate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;savedInstanceState&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;setContentView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;R&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;layout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;activity_main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;다음과 같이 코드가 생성된다. super.onCreate(savedInstanceState) 코드의 경우는 부모 클래스의 함수를 그대로 부르는것이다.&lt;/p&gt;

&lt;p&gt;그렇다면 남아있는 것은 setContentView(R.layout.activity_main) 이 부분이다.&lt;/p&gt;

&lt;p&gt;따라서 이 부분이 소스코드 파일과 XML 레이아웃 파일을 이어주는 역할을 한다고 볼 수 있다.&lt;/p&gt;

&lt;p&gt;여기서 파라미터 값을 살펴보면 R은 res 폴더를 의미하고 layout은 layout 폴더를 의미한다.&lt;/p&gt;

&lt;p&gt;따라서 res/layout/activity_main.xml을 의미하는 것으로 볼 수 있다.&lt;/p&gt;

&lt;p&gt;실제로 앱을 실행하게 되면 XML 레이아웃이 객체화되어 소스코드 파일에서 사용된다.&lt;/p&gt;

&lt;p&gt;이 과정을 인플레이션이라고 한다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;인플레이션 : XML 레이아웃의 내용이 메모리에 객체화되는 과정&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;이러한 인플레이션의 과정이 setContentView(R.layout.activity_main) 해당 부분에서 일어나게 된다.&lt;/p&gt;

&lt;p&gt;이 부분을 증명하기 위해서 해당 호출 과정의 전에서 xml 레이아웃에 있는 리소스들을 접근하게 되면 앱이 실행하지 않고 종료하는&lt;/p&gt;

&lt;p&gt;것으로 알 수 있다. (시간이 된다면 한번 해보는것을 추천한다.)&lt;/p&gt;

&lt;p&gt;하지만 setContentView 라는 메서드는 xml 파일을 객체화 하는 역할 뿐 아니라 화며에 나타낼 뷰를 지정하는 역할도 수행합니다.&lt;/p&gt;

&lt;p&gt;그렇다면 화면 전체의 XML 레이아웃이 아닌 별도의 XML 레이아웃 파일을 인플레이션 작업을 할 순 없는걸까요?&lt;/p&gt;

&lt;p&gt;이 과정은 다음시간에 다루어 보도록 하겠습니다.&lt;/p&gt;</content>

      
      
      
      
      

      <author>
          <name>gMinGit</name>
        
        
      </author>

      

      
        <category term="Android" />
      

      
        <summary type="html">(1) Inflation (2) Inflation</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">(1) Hello World</title>
      <link href="https://gmingit.github.io/hello-world" rel="alternate" type="text/html" title="(1) Hello World" />
      <published>2021-02-25T09:02:00+09:00</published>
      <updated>2021-02-25T09:02:00+09:00</updated>
      <id>https://gmingit.github.io/hello-world</id>
      <content type="html" xml:base="https://gmingit.github.io/hello-world">&lt;p&gt;첫 게시글.&lt;/p&gt;

&lt;p&gt;이제부터 Android 1234게시글을 시작한다.&lt;/p&gt;

&lt;p&gt;환영합니다!&lt;/p&gt;</content>

      
      
      
      
      

      <author>
          <name>gMinGit</name>
        
        
      </author>

      

      
        <category term="Android" />
      

      
        <summary type="html">첫 게시글.</summary>
      

      
      
    </entry>
  
</feed>
